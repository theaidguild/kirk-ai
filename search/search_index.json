{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kirk-ai","text":"<p>kirk-ai is a compact command-line interface crafted to interact with Ollama AI models. This site provides guided documentation to get you started quickly, explain the architecture, and help you integrate <code>kirk-ai</code> into your workflows.</p>"},{"location":"#quick-links","title":"Quick links","text":"<ul> <li>Installation</li> <li>Usage</li> <li>Commands</li> <li>Architecture</li> <li>Contributing</li> </ul>"},{"location":"#why-kirk-ai","title":"Why kirk-ai?","text":"<ul> <li>Minimal, focused CLI for model interactions</li> <li>Clear separation between API client, templates and commands</li> <li>Lightweight and easily extensible</li> </ul>"},{"location":"#example-quick-chat","title":"Example \u2014 quick chat","text":"<pre><code>./kirk-ai chat \"Hello \u2014 what's new?\"\n</code></pre> <p>This repository is designed for contributors and users alike. Use the sidebar to navigate deeper sections or search from the top bar.</p>"},{"location":"architecture/","title":"Architecture","text":"<p>kirk-ai is organized to keep responsibilities separated and the codebase easy to reason about.</p> <ul> <li><code>cmd/</code> \u2014 CLI command definitions and wiring (Cobra)</li> <li><code>internal/client</code> \u2014 HTTP client for Ollama interactions</li> <li><code>internal/templates</code> \u2014 Prompt templates used for code generation tasks</li> <li><code>internal/models</code> \u2014 Request/response structs</li> </ul> <p>The CLI follows a simple flow: parse flags \u2192 select model \u2192 call client \u2192 format output.</p>"},{"location":"architecture/#extending-the-cli","title":"Extending the CLI","text":"<p>Add a new command under <code>cmd/</code> and register it in <code>root.go</code>. Use existing helpers for model selection and error handling to keep behavior consistent.</p>"},{"location":"commands/","title":"Commands","text":"<p>This project uses Cobra for CLI command structure. Below are examples and common flags.</p>"},{"location":"commands/#chat","title":"chat","text":"<p>Use the <code>chat</code> command to send prompts to a selected model.</p> <pre><code>./kirk-ai chat \"Write a short poem about the sea\"\n</code></pre> <p>Flags: - <code>--model</code> \u2014 specify model name - <code>--verbose</code> \u2014 show metadata</p>"},{"location":"commands/#embed","title":"embed","text":"<p>Generate embeddings for text snippets.</p> <pre><code>./kirk-ai embed \"Document text to embed\"\n</code></pre>"},{"location":"commands/#models","title":"models","text":"<p>List models available from the Ollama server.</p> <pre><code>./kirk-ai models\n</code></pre>"},{"location":"commands/#code","title":"code","text":"<p>Generate code snippets or helper functions using the recommended coding model.</p> <pre><code>./kirk-ai code \"Create a function that reverses a string\"\n</code></pre>"},{"location":"contributing/","title":"Contributing","text":"<p>Thanks for contributing! We welcome fixes, documentation improvements, and new features.</p>"},{"location":"contributing/#development-workflow","title":"Development workflow","text":"<ul> <li>Fork the repo and create a feature branch.</li> <li>Run <code>go fmt ./...</code> and <code>go vet ./...</code> before committing.</li> <li>Add tests alongside your code changes.</li> </ul>"},{"location":"contributing/#docs-contributions","title":"Docs contributions","text":"<ul> <li>Edit markdown files under <code>docs_src/</code>.</li> <li>Preview locally with <code>mkdocs serve -f mkdocs.yml</code>.</li> <li>Open a PR against <code>main</code> \u2014 the Pages CI pipeline will build and deploy the docs automatically.</li> </ul>"},{"location":"contributing/#reviewing","title":"Reviewing","text":"<p>Keep changes small and focused. For large changes, open an issue first to discuss the approach.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#requirements","title":"Requirements","text":"<ul> <li>Go 1.19 or higher</li> <li>Ollama (optional) for model-based features</li> </ul>"},{"location":"installation/#quickstart","title":"Quickstart","text":"<ol> <li>Clone the repository</li> </ol> <pre><code>git clone https://github.com/theaidguild/kirk-ai.git\ncd kirk-ai\n</code></pre> <ol> <li>Download dependencies and build</li> </ol> <pre><code>go mod download &amp;&amp; go mod tidy\n\ngo build -v .\n</code></pre> <ol> <li>Run locally</li> </ol> <pre><code>./kirk-ai --help\n</code></pre> <p>For documentation preview:</p> <pre><code>pip install -r docs_requirements.txt\nmkdocs serve -f mkdocs.yml\n</code></pre>"},{"location":"usage/","title":"Usage","text":"<p>This section explains common usage patterns for <code>kirk-ai</code>.</p>"},{"location":"usage/#list-models","title":"List models","text":"<pre><code>./kirk-ai models\n</code></pre>"},{"location":"usage/#chat","title":"Chat","text":"<pre><code>./kirk-ai chat \"Hello! Tell me a joke\"\n</code></pre>"},{"location":"usage/#embeddings","title":"Embeddings","text":"<pre><code>./kirk-ai embed \"This is some text to embed\"\n</code></pre>"},{"location":"usage/#build-and-run","title":"Build and run","text":"<pre><code>go build -v .\n./kirk-ai --help\n</code></pre>"}]}