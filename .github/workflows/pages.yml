name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Ensure the workflow has permission to push if using actions that write branches
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Show workspace (diagnostic)
        run: |
          echo "Workspace: $(pwd)"
          echo "Listing root files:" && ls -la
          echo "Checking docs_src/ presence..."
          if [ -d "docs_src" ]; then
            echo "docs_src/ exists. Listing docs_src/:" && ls -la docs_src
          else
            echo "ERROR: docs_src/ directory not found in repository workspace." && exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('docs_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Cache MkDocs build
        uses: actions/cache@v4
        with:
          path: .cache
          key: ${{ runner.os }}-mkdocs-${{ hashFiles('mkdocs.yml') }}-${{ hashFiles('docs_src/**') }}
          restore-keys: |
            ${{ runner.os }}-mkdocs-${{ hashFiles('mkdocs.yml') }}-
            ${{ runner.os }}-mkdocs-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f docs_requirements.txt ]; then
            pip install -r docs_requirements.txt
          else
            pip install mkdocs mkdocs-material mkdocs-minify-plugin
          fi

      - name: Build MkDocs site
        env:
          MKDOCS_ENABLE_PLUGIN_CACHE: true
        run: |
          mkdocs build --clean --strict --site-dir site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

# Note: if your organization or repository settings restrict the GITHUB_TOKEN's write permissions, the action may still fail with "Write access to repository not granted." In that case either:
# - Adjust repository or organization Actions permissions to allow write access for workflows, or
# - Create a personal access token with repo:status, repo_deployment, public_repo, repo:invite and add it as a secret (e.g. GH_PAGES_PAT) and pass it as `personal_token: ${{ secrets.GH_PAGES_PAT }}` to the peaceiris action.
