name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]

# Ensure the workflow has permission to push if using actions that write branches
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Show workspace (diagnostic)
        run: |
          echo "Workspace: $(pwd)"
          echo "Listing root files:" && ls -la
          echo "Checking docs_src/ presence..."
          if [ -d "docs_src" ]; then
            echo "docs_src/ exists. Listing docs_src/:" && ls -la docs_src
          else
            echo "ERROR: docs_src/ directory not found in repository workspace." && exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('docs_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install MkDocs and theme
        run: |
          python -m pip install --upgrade pip
          if [ -f docs_requirements.txt ]; then
            pip install -r docs_requirements.txt
          else
            pip install mkdocs mkdocs-material
          fi

      - name: Build MkDocs site
        run: |
          mkdocs build --clean --site-dir site

      - name: Ensure site/.nojekyll exists
        run: |
          mkdir -p site
          touch site/.nojekyll

      - name: Deploy to GitHub Pages (gh-pages branch)
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          nojekyll: true
          # Optional: set the branch name (defaults to gh-pages)
          # publish_branch: gh-pages

# Note: if your organization or repository settings restrict the GITHUB_TOKEN's write permissions, the action may still fail with "Write access to repository not granted." In that case either:
# - Adjust repository or organization Actions permissions to allow write access for workflows, or
# - Create a personal access token with repo:status, repo_deployment, public_repo, repo:invite and add it as a secret (e.g. GH_PAGES_PAT) and pass it as `personal_token: ${{ secrets.GH_PAGES_PAT }}` to the peaceiris action.
